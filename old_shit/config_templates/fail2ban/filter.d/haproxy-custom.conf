# ======================================================================
# Fail2Ban Filter Definition for Custom HAProxy Rules
# Generated by: deploy_proxy_platform.sh
# Purpose: Match log entries indicating dropped or rejected connections.
# Location: /etc/fail2ban/filter.d/haproxy-custom.conf
# ======================================================================

[Definition]

# This filter targets specific HAProxy log patterns generated when using
# 'http-request silent-drop' or 'tcp-request connection reject'.
# It relies on HAProxy's 'option httplog' or 'option tcplog' being enabled.

# --- Log Format Assumptions ---
# The regex assumes a relatively standard HAProxy log format including:
# - Client IP Address (<HOST>)
# - Timestamp/Date Information
# - Frontend Name (e.g., ft_subscription_site, ft_vless_tls, ft_hysteria2)
# - Termination State Flags (crucially SD-- for silent drop, PR-- for reject)

# Example Log Line for Silent Drop (HTTP):
# Feb 27 12:00:00 hostname haproxy[pid]: 192.168.1.100:12345 [27/Feb/2024:12:00:00.123] ft_subscription_site~ <NOSRV>/<NOSRV> -1/-1/-1/-1/0 400 187 - - SD-- 1/1/0/0/0 0/0 "GET /nonexistent HTTP/1.1"
#                                         ^-- <HOST>                             ^-- Frontend Name                   ^-- Termination State (SD--)

# Example Log Line for Reject (TCP/UDP Rate Limit):
# Feb 27 12:01:00 hostname haproxy[pid]: 192.168.1.101:54321 [27/Feb/2024:12:01:00.456] ft_hysteria2 ft_hysteria2/<NOSRV> -1/-1/-1/-1/0 0 0 - - PR-- 1/1/0/0/0 0/0 "<BADREQ>"
#                                         ^-- <HOST>                             ^-- Frontend Name                   ^-- Termination State (PR--)

# --- Fail Regex ---
# This regex tries to robustly match these lines while extracting the client IP (<HOST>).
# - `^\s*` handles potential leading whitespace from syslog.
# - `.*\s` matches timestamp and hostname parts loosely.
# - `haproxy\[\d+\]:\s+` matches the process name and PID.
# - `<HOST>:\d+\s+` matches the client IP and port. Fail2ban uses <HOST>.
# - `\[.*?\]\s+` matches the HAProxy timestamp non-greedily.
# - `ft_(vless_tls|subscription_site|hysteria2)\S*\s+` matches the specific frontend names we care about.
# - `.*\s+` matches intermediate log fields loosely.
# - `(SD--|PR--)\s+` matches the specific termination state flags indicating a drop or reject.
# - `.*$` matches the rest of the line.

failregex = ^\s*.*\shaproxy\[\d+\]:\s+<HOST>:\d+\s+\[.*?\]\s+ft_(vless_tls|subscription_site)\S*\s+.*\s+SD--\s+.*$
            ^\s*.*\shaproxy\[\d+\]:\s+<HOST>:\d+\s+\[.*?\]\s+ft_hysteria2\S*\s+.*\s+PR--\s+.*$

# --- Ignore Regex ---
# Use ignoreregex to specify patterns that should *not* trigger a ban,
# even if they match failregex. Useful for whitelisting specific IPs
# or scenarios if needed, but typically left empty for this use case.
ignoreregex =

# --- Notes ---
# Date pattern detection is usually handled automatically by Fail2ban based
# on common log timestamp formats found at the beginning of the line.
# If timestamps are unusual, you might need to add a 'datepattern' directive.
# Test this filter thoroughly using:
# fail2ban-regex /var/log/haproxy.log /etc/fail2ban/filter.d/haproxy-custom.conf
