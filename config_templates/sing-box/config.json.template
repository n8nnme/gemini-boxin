{
  // ======================================================================
  // Sing-Box Configuration Template
  // Version 1.6 (Hysteria2: OBFS, direct listen, empty initial users array)
  // Generated by: deploy_proxy_platform.sh
  // Purpose: Define VLESS and Hysteria2 backend services.
  // Location: /etc/sing-box/config.json
  // ======================================================================

  "log": {
    "level": "info",
    "timestamp": true
  },

  "inbounds": [
    // --- VLESS Inbound ---
    // Receives connections from HAProxy for the VLESS service
    {
      "type": "vless",
      "tag": "vless-in",
      // Listen only on the loopback interface for HAProxy
      "listen": "127.0.0.1",
      "listen_port": ${SINGBOX_VLESS_LISTEN_PORT}, // e.g., 10001
      "users": [], // VLESS UUIDs managed by manage_proxy_users.sh
      "transport": {
        "type": "http",
        "path": "${VLESS_PATH}"
      }
    },

    // --- Hysteria2 Inbound ---
    // Listens directly on public UDP port
    {
      "type": "hysteria2",
      "tag": "hy2-in", // Consistent tag for routing
      "listen": "0.0.0.0", // Listen on all interfaces
      "listen_port": ${HYSTERIA2_PORT}, // Public Hysteria2 port
      "up_mbps": 1000,
      "down_mbps": 1000,
      "obfs": {
        "type": "salamander", // Or "metadata"
        "password": "${HYSTERIA2_OBFS_PASSWORD}"
      },
      "users": [], // Hysteria2 users managed by manage_proxy_users.sh
                   // The deploy_proxy_platform.sh script should add the initial user.
      "tls": {
        "enabled": true,
        "server_name": "${MAIN_DOMAIN}", // Should match the certificate
        "alpn": ["h3"], // Common ALPN for Hysteria2
        "certificate_path": "${SINGBOX_CERT_DIR}/hysteria2.cert.pem",
        "key_path": "${SINGBOX_CERT_DIR}/hysteria2.key.pem"
      }
      // "ignore_client_bandwidth": false, // Default
      // "masquerade": "", // Default
      // "brutal_debug": false // Default
    }
  ],

  "outbounds": [
    {
      "type": "direct",
      "tag": "direct-out"
    },
    {
      "type": "block",
      "tag": "block-out"
    }
  ],

  "route": {
    "rules": [
      {
        "inbound": ["vless-in", "hy2-in"], // Ensure hy2-in tag matches Hysteria2 inbound
        "outbound": "direct-out"
      }
    ]
    // "final": "direct-out" // Optional: default outbound if no rules match
  }
}
